// Created by Microsoft (R) C/C++ Compiler Version 12.00.8168.0 (95165464).
//
// d:\mtscomponents_context\createappnt1\releaseumindependency\JpjUpdSpCaller.tlh
//
// C++ source equivalent of Win32 type library JpjUpdSpCaller.tlb
// compiler-generated file created 04/08/15 at 18:08:40 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

//
// Forward references and typedefs
//

struct /* coclass */ JpjUpdSpCallerService;
struct __declspec(uuid("611d0a25-0d55-4fb2-9833-fc9358779dcc"))
/* dual interface */ IJpjUpdSpCallerService;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IJpjUpdSpCallerService, __uuidof(IJpjUpdSpCallerService));

//
// Type library items
//

struct __declspec(uuid("86bfbc6f-f305-480d-9236-022088bc7fd1"))
JpjUpdSpCallerService;
    // [ default ] interface IJpjUpdSpCallerService

struct __declspec(uuid("611d0a25-0d55-4fb2-9833-fc9358779dcc"))
IJpjUpdSpCallerService : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Execute (
        SAFEARRAY * pDataReq,
        SAFEARRAY * * pDataResp );

    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall raw_Execute (
        SAFEARRAY * pDataReq,
        SAFEARRAY * * pDataResp ) = 0;
};

//
// Wrapper method implementations
//

#include "d:\mtscomponents_context\createappnt1\releaseumindependency\JpjUpdSpCaller.tli"

#pragma pack(pop)
